name: Build and Deploy (Railway - Node/Express)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: node-src
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      # If you don't have a lockfile, either add one or switch to `npm install`.
      - name: Install dependencies
        run: npm ci

      - name: Run tests (optional)
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json >/dev/null; then
            npm test --if-present
          else
            echo "No test script; skipping."
          fi

      - name: Build (if applicable)
        run: npm run build --if-present

      - name: Archive source (tracked files only)
        shell: bash
        run: |
          git ls-files -z | tar --null -T - -czf node-src.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-src
          path: node-src.tar.gz
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-src
          path: build

      - name: Extract artifact
        run: |
          tar -xzf build/node-src.tar.gz -C build
          rm build/node-src.tar.gz

      - name: Install Railway CLI
        run: npm i -g @railway/cli@3.18.0

      # No 'railway login' here. The CLI reads RAILWAY_TOKEN directly.
      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        working-directory: build
        run: |
          RAILWAY_TOKEN=$RAILWAY_TOKEN railway up --service server